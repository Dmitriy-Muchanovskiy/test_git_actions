# This is a basic workflow to help you get started with Actions

name: CI-CD-gitactions-to-AWS-ElasticBeanstalk
env:
  EB_PACKAGE_S3_BAKET_NAME : "mytest-bucket-gitactions"
  EB_APP_NAME              : "test-flask-for-githubactions"
  EB_ENVIRONMENT_NAME      : "Testflaskforgithubactions-env"
  DEPLOY_PACKAGE_NAME      : "flask_app_${{github.sha }}.zip"
  AWS_REGION_NAME          : "eu-north-1"

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  my_ci_part:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Git-Clone Repo
        uses: actions/checkout@v2

      - name: Create zip deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
        
      - name: Config my AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    : ${{ secrets.MY_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_ACCESS_KEY }}
          aws-region           : ${{ env.AWS_REGION_NAME }}
        
      - name: Copy Deploy Package to S3 backet
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BAKET_NAME }}/
        
      - name: print Happy Messege for CI
        run: echo "CI Pipeline part finished succesfully"
